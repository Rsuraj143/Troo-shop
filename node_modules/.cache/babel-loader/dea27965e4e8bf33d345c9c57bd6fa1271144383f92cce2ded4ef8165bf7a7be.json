{"ast":null,"code":"const cart = [];\nconst handleCart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n  switch (action.type) {\n    case \"ADDITEM\":\n      const exist = state.find(x => x.id === product.id);\n      if (exist) {\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        return [...state, {\n          ...product,\n          qty: 1\n        }];\n      }\n      break;\n    case \"DELITEM\":\n      const exist1 = state.find(x => x.id === product.id);\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n      break;\n    default:\n      return;\n      break;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","action","product","payload","type","exist","find","x","id","map","qty","exist1","filter"],"sources":["D:/Projects/Troo-shop/src/redux/reducer/handleCart.js"],"sourcesContent":["\r\n\r\nconst cart = []\r\n\r\nconst handleCart = (state=cart, action) =>{\r\n    const product = action.payload;\r\n    switch(action.type){\r\n        case \"ADDITEM\" :\r\n            const exist = state.find((x)=>x.id ===product.id)\r\n            if(exist){\r\n                return state.map((x)=>\r\n                x.id === product.id ? {...x, qty:x.qty +1} : x\r\n                );\r\n            }\r\n            else{\r\n                const product = action.payload\r\n                return[\r\n                    ...state,\r\n                    {\r\n                        ...product,\r\n                        qty:1\r\n                    }\r\n                ]\r\n            }\r\n            break;\r\n\r\n        case \"DELITEM\" :\r\n            const exist1 = state.find((x)=>x.id === product.id)\r\n            if(exist1.qty===1){\r\n                return state.filter((x)=> x.id !== exist1.id)\r\n            }\r\n            else{\r\n                state.map((x)=>\r\n                x.id === product.id ? {...x, qty:x.qty-1} : x\r\n                )\r\n            }\r\n            break;\r\n        \r\n\r\n        default:\r\n            return\r\n            break;\r\n    }\r\n}\r\nexport default handleCart;"],"mappings":"AAEA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAG,YAAuB;EAAA,IAAtBC,KAAK,uEAACF,IAAI;EAAA,IAAEG,MAAM;EAClC,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;EAC9B,QAAOF,MAAM,CAACG,IAAI;IACd,KAAK,SAAS;MACV,MAAMC,KAAK,GAAGL,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAGA,CAAC,CAACC,EAAE,KAAIN,OAAO,CAACM,EAAE,CAAC;MACjD,IAAGH,KAAK,EAAC;QACL,OAAOL,KAAK,CAACS,GAAG,CAAEF,CAAC,IACnBA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;UAAC,GAAGD,CAAC;UAAEG,GAAG,EAACH,CAAC,CAACG,GAAG,GAAE;QAAC,CAAC,GAAGH,CAAC,CAC7C;MACL,CAAC,MACG;QACA,MAAML,OAAO,GAAGD,MAAM,CAACE,OAAO;QAC9B,OAAM,CACF,GAAGH,KAAK,EACR;UACI,GAAGE,OAAO;UACVQ,GAAG,EAAC;QACR,CAAC,CACJ;MACL;MACA;IAEJ,KAAK,SAAS;MACV,MAAMC,MAAM,GAAGX,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAGA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MACnD,IAAGG,MAAM,CAACD,GAAG,KAAG,CAAC,EAAC;QACd,OAAOV,KAAK,CAACY,MAAM,CAAEL,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKG,MAAM,CAACH,EAAE,CAAC;MACjD,CAAC,MACG;QACAR,KAAK,CAACS,GAAG,CAAEF,CAAC,IACZA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;UAAC,GAAGD,CAAC;UAAEG,GAAG,EAACH,CAAC,CAACG,GAAG,GAAC;QAAC,CAAC,GAAGH,CAAC,CAC5C;MACL;MACA;IAGJ;MACI;MACA;EAAM;AAElB,CAAC;AACD,eAAeR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}